# docker-compose.yml

services:
  prometheus:
    # Prometheus image'ini monitoring/prometheus.dockerfile orqali quradi
    build:
      context: .
      dockerfile: monitoring/prometheus.dockerfile
    container_name: prometheus
    ports:
      - "9091:9090" # Prometheus web interfeysi uchun
    # Mavjud 'app-network' tarmog'iga ulanadi
    networks:
      - app-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000" # Grafana web interfeysi uchun
    volumes:
      # Grafana sozlamalarini saqlab qolish uchun
      - grafana-data:/var/lib/grafana
    networks:
      - app-network
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100" # Loki API uchun
    networks:
      - app-network
    restart: unless-stopped

  promtail:
    # Promtail image'ini monitoring/promtail.dockerfile orqali quradi
    build:
      context: .
      dockerfile: monitoring/promtail.dockerfile
    container_name: promtail
    volumes:
      # MUHIM: Bu yo'lni serveringizdagi haqiqiy manzilga o'zgartiring!
      # Jenkins loyihani qayerga clone qilsa, o'sha yerdagi 'logs' papkasining to'liq manzili.
      - /var/lib/jenkins/workspace/KUNDALIK/logs:/var/log/kundalik
    networks:
      - app-network
    restart: unless-stopped

# Barcha servislar ishlaydigan umumiy tarmoqni belgilaymiz
networks:
  app-network:
    # Bu Docker'ga 'app-network' allaqachon mavjud ekanligini va uni ishlatish kerakligini aytadi
    external: true

# Grafana ma'lumotlarini saqlash uchun nomlangan volume
volumes:
  grafana-data: